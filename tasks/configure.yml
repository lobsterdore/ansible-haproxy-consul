---

- name: Create consul-template config
  become: yes
  template:
    dest: "{{ haproxy_consul.consul_template.conf_dir }}/config.hcl"
    src: consul-template/config.hcl.j2
  notify:
    - restart consul-template
    - restart haproxy

- name: Create consul-template Haproxy config
  become: yes
  template:
    dest: "{{ haproxy_consul.consul_template.conf_dir }}/haproxy.ctmpl"
    src: consul-template/haproxy.ctmpl.j2
  when: haproxy_consul.haproxy.default_config
  notify:
    - restart consul-template
    - restart haproxy

- name: Gather AWS facts
  action: ec2_facts
  register: ec2_vars

- name: Associate Elastic IP
  ec2_eip:
    instance_id: "{{ ansible_ec2_instance_id }}"
    ip: "{{ haproxy_consul.aws.ec2_elastic_ip }}"
    region: "{{ haproxy_consul.aws.region }}"
  when: ansible_ec2_instance_id is defined and haproxy_consul.aws.ec2_elastic_ip

- name: Set interface type
  set_fact:
    haproxy_consul:
      interface_type: "{{ 'public' if haproxy_consul.aws.schema is 'Public' else 'local' }}"

- name: Associate R53 record
  route53:
    command: create
    overwrite: yes
    record: "{{ haproxy_consul.aws.r53_record }}"
    ttl: 0
    type: A
    value: "{{ ec2_vars['ansible_facts']['ansible_ec2_' + haproxy_consul.interface_type + '_ipv4'] }}"
    zone: "{{ haproxy_consul.aws.r53_zone }}"
  when: ansible_ec2_instance_id is defined and haproxy_consul.aws.r53_record
