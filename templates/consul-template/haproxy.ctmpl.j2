global
    chroot /var/lib/haproxy
    maxconn 4096
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    tune.ssl.default-dh-param 1024

defaults
    log global
    log 127.0.0.1 local0
    mode http
    balance leastconn
    option httpclose
    option forwardfor
    option httplog
    option dontlognull
    option forwardfor
    option http-server-close
    option redispatch
    retries 5
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    timeout http-keep-alive 10s
    timeout check 10s

frontend http-in
    bind *:80
    {{ if haproxy_consul.haproxy.ssl_pems_dir }}

    bind *:443 ssl crt {{ haproxy_consul.haproxy.ssl_pems_dir }}
    reqadd X-Forwarded-Proto:\ https if { ssl_fc }
    {{ endif }}

    {% raw %}{{range $i,$a:=services}}{{if or {% endraw %}{% for tag in haproxy_consul.consul.tags %} (.Tags | contains "{{ tag }}") {% endfor %}{% raw %}}}{{range $a.Tags}}{{$tag:=.}}{{if $tag | regexMatch "^hostnames-(.+)" }}{% endraw %}use_backend instances_{% raw %}{{$a.Name}}{% endraw %} if { hdr(Host) -i {% raw %}{{$tag | regexReplaceAll "^hostnames-(.+)" "$1"}} }{{end}}{{end}}{{end}}

    {{end}}{% endraw %}

{% raw %}{{range $i,$a:=services}}{{if or {% endraw %}{% for tag in haproxy_consul.consul.tags %} (.Tags | contains "{{ tag }}") {% endfor %}{% raw %}}}{% endraw %}
backend instances_{% raw %}{{$a.Name}}{% endraw %}

    cookie JSESSIONID prefix{% raw %}{{range $c,$d:=service $a.Name}}{% endraw %}

    option tcp-check
    server instance{% raw %}{{$c}} {{.Address}}:{{.Port}}{% endraw %} cookie A check port {% raw %}{{.Port}}{{end}}{{end}}{% endraw %}

{% raw %}

{{end}}{% endraw %}
